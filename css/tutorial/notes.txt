Chapter 1: Start Here

1.External and internal stylesheets are the same in the order of precedence.
  Therefore, the stylesheet that is declared latest in the code dominates in the web page.
2.In-line stylesheet takes precedence over external, internal stylesheets.
-------------------------------------------------

Chapter 2: Selectors

Typically, use css selectors and sometimes element selectors but rarely id selectors.They have other valid uses (javascript, linking a form input to a label in html)
Avoid using id selectors in css

1. Classes are more specific than selecting all paragraphs
    And because they are specific, they can overrule the original settings
    i.e., class selectors can overrule element selectors.
2. Id selectors are even more specific than class selectors

Inheritance: 
1. The properties from body element is inherited to all the elements inside of the body.
2. Border cannot be inherited. 
3. Also, form elements do not inherit font-size.
  To inherit those, set the value of "font" property to "inherit" ###refer demo1
Universal selector: It is selecting all elements. This is NOT Inheritance. ###refer demo2

Note: 
1. use "!important" to make sure the property is final.
  But only when you mastered css and are worthy of it. ###refer demo3
2. To know specificity of a selector: use Specificity Calculator. Go to https://specificity.keegan.st/ ; scores will be 1, 20, 300...
-------------------------------------------------

Chapter 3: Colors

coolers.co website: palette generator
                    contrast checker (Gray's preference)
WebAIM contrast checker
-------------------------------------------------

Chapter 4: Units

● root element: <html>
● parent element:  An element that is directly above and connected to an element in the document tree.
● rem-  relative to the root (HTML) font size
● em- relative to the parent element's font size
   ● If u don't want to end up frustrated, better use rem
● vh-
● %-
-------------------------------------------------

Chapter 5: Box
-------------------------------------------------

Chapter 6: Typography

○ Typography is the way that text is arranged and presented
    ● select text and press "shift+alt+A" for comments
○ fallback: use commas. If first font is not available on the user's device, the second one is used and so on.
○ some generic font-families: monospace, fantasy, cursive 
○ some other popular ones: Aial, Verdana, 'Courier New', 'Times New Roman'
● use "fonts.google.com" to get a visualization for the font-weight, font-style combinations.
-------------------------------------------------

Chapter 7: Styling Links

Styling hyper text links is just an extension of Typography
pseudo styling: a:visited, a:hover, a:active and they must be styled in the same order, after styling a.
-------------------------------------------------

Chapter 7: Styling Lists


-------------------------------------------------


Colors (freecodecamp):
○ type selector to style the h1 element

○ The div element is used mainly for design layout purposes

● There are two main color models: the additive RGB (red, green, blue) model used in electronic devices, and the subtractive CMYK (cyan, magenta, yellow, black) model used in print

● The HSL color model, or hue, saturation, and lightness, is another way to represent colors.
● The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 for saturation, and a percentage from 0 to 100 for lightness.
● Saturation is the intensity of a color from 0%, or gray, to 100% for pure color. You must add the percent sign % to the saturation and lightness values.
● Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being neutral.

The box-shadow property lets you apply one or more shadows around an element. Here is basic syntax:

box-shadow: offsetX offsetY color;
Here's how the offsetX and offsetY values work:

both offsetX and offsetY accept number values in px and other CSS units
a positive offsetX value moves the shadow right and a negative value moves it left
a positive offsetY value moves the shadow down and a negative value moves it up
if you want a value of zero (0) for any or both offsetX and offsetY, you don't need to add a unit. Every browser understands that zero means no change.
The height and width of the shadow is determined by the height and width of the element it's applied to. You can also use an optional spreadRadius value to spread out the reach of the shadow. More on that later.